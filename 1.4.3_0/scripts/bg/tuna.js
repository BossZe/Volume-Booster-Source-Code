!function(){var t,e,i=function(e,i){e.setValueAtTime(i,t.currentTime)},a=Object.create(null,{activate:{writable:!0,value:function(t){t?(this.input.disconnect(),this.input.connect(this.activateNode),this.activateCallback&&this.activateCallback(t)):(this.input.disconnect(),this.input.connect(this.output))}},bypass:{get:function(){return this._bypass},set:function(t){this._lastBypassValue!==t&&(this._bypass=t,this.activate(!t),this._lastBypassValue=t)}},connect:{value:function(t){this.output.connect(t)}},disconnect:{value:function(t){this.output.disconnect(t)}},connectInOrder:{value:function(t){for(var e=t.length-1;e--;){if(!t[e].connect)return;t[e+1].input?t[e].connect(t[e+1].input):t[e].connect(t[e+1])}}},getDefaults:{value:function(){var t={};for(var e in this.defaults)t[e]=this.defaults[e].value;return t}},automate:{value:function(e,i,a,n){var s,u=n?~~(n/1e3):t.currentTime,o=a?~~(a/1e3):0,l=this.defaults[e],c=this[e];c&&(l.automatable?(a?(s="linearRampToValueAtTime",c.cancelScheduledValues(u),c.setValueAtTime(c.value,u)):s="setValueAtTime",c[s](i,o+u)):c=i)}}}),n="float";function s(i){if(!(this instanceof s))return new s(i);var n="undefined"==typeof window?{}:window;if(n.AudioContext||(n.AudioContext=n.webkitAudioContext),i||(i=n.AudioContext&&new n.AudioContext),!i)throw new Error("Tuna cannot initialize because this environment does not support web audio.");!function(t){if(!0===t.__connectified__)return;var e=t.createGain(),i=Object.getPrototypeOf(Object.getPrototypeOf(e)),n=i.connect;function s(){var t=arguments[0];return arguments[0]=a.isPrototypeOf?a.isPrototypeOf(t)?t.input:t:t.input||t,n.apply(this,arguments),t}i.connect=s,t.__connectified__=!0}(i),t=i,e=this}function u(t,e){return void 0===t?e:t}"undefined"!=typeof module&&module.exports?module.exports=s:"function"==typeof define?window.define("Tuna",(function(){return s})):window.Tuna=s,s.prototype.Chorus=function(a){a||(a=this.getDefaults()),this.input=t.createGain(),this.attenuator=this.activateNode=t.createGain(),this.splitter=t.createChannelSplitter(2),this.delayL=t.createDelay(),this.delayR=t.createDelay(),this.feedbackGainNodeLR=t.createGain(),this.feedbackGainNodeRL=t.createGain(),this.merger=t.createChannelMerger(2),this.output=t.createGain(),this.lfoL=new e.LFO({target:this.delayL.delayTime,callback:i}),this.lfoR=new e.LFO({target:this.delayR.delayTime,callback:i}),this.input.connect(this.attenuator),this.attenuator.connect(this.output),this.attenuator.connect(this.splitter),this.splitter.connect(this.delayL,0),this.splitter.connect(this.delayR,1),this.delayL.connect(this.feedbackGainNodeLR),this.delayR.connect(this.feedbackGainNodeRL),this.feedbackGainNodeLR.connect(this.delayR),this.feedbackGainNodeRL.connect(this.delayL),this.delayL.connect(this.merger,0,0),this.delayR.connect(this.merger,0,1),this.merger.connect(this.output),this.feedback=u(a.feedback,this.defaults.feedback.value),this.rate=u(a.rate,this.defaults.rate.value),this.delay=u(a.delay,this.defaults.delay.value),this.depth=u(a.depth,this.defaults.depth.value),this.lfoR.phase=Math.PI/2,this.attenuator.gain.setValueAtTime(.6934,t.currentTime),this.lfoL.activate(!0),this.lfoR.activate(!0),this.bypass=a.bypass||!1},s.prototype.Chorus.prototype=Object.create(a,{name:{value:"Chorus"},defaults:{writable:!0,value:{feedback:{value:0,min:0,max:.95,automatable:!1,type:n},delay:{value:0,min:0,max:1,automatable:!1,type:n},depth:{value:.7,min:0,max:1,automatable:!1,type:n},rate:{value:0,min:0,max:8,automatable:!1,type:n},bypass:{value:!1,automatable:!1,type:"boolean"}}},delay:{enumerable:!0,get:function(){return this._delay},set:function(t){this._delay=2*Math.pow(10,t)*2e-4,this.lfoL.offset=this._delay,this.lfoR.offset=this._delay,this._depth=this._depth}},depth:{enumerable:!0,get:function(){return this._depth},set:function(t){this._depth=t,this.lfoL.oscillation=this._depth*this._delay,this.lfoR.oscillation=this._depth*this._delay}},feedback:{enumerable:!0,get:function(){return this._feedback},set:function(e){this._feedback=e,this.feedbackGainNodeLR.gain.setValueAtTime(this._feedback,t.currentTime),this.feedbackGainNodeRL.gain.setValueAtTime(this._feedback,t.currentTime)}},rate:{enumerable:!0,get:function(){return this._rate},set:function(t){this._rate=t,this.lfoL.frequency=this._rate,this.lfoR.frequency=this._rate}}}),s.prototype.Convolver=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.activateNode=t.createGain(),this.convolver=t.createConvolver(),this.dry=t.createGain(),this.filterLow=t.createBiquadFilter(),this.filterHigh=t.createBiquadFilter(),this.wet=t.createGain(),this.output=t.createGain(),this.activateNode.connect(this.filterLow),this.activateNode.connect(this.dry),this.filterLow.connect(this.filterHigh),this.filterHigh.connect(this.convolver),this.convolver.connect(this.wet),this.wet.connect(this.output),this.dry.connect(this.output),this.dryLevel=u(e.dryLevel,this.defaults.dryLevel.value),this.wetLevel=u(e.wetLevel,this.defaults.wetLevel.value),this.highCut=e.highCut||this.defaults.highCut.value,this.buffer=e.impulse||"../scripts/libs/impulses.wav",this.lowCut=e.lowCut||this.defaults.lowCut.value,this.level=u(e.level,this.defaults.level.value),this.filterHigh.type="lowpass",this.filterLow.type="highpass",this.bypass=e.bypass||!1},s.prototype.Convolver.prototype=Object.create(a,{name:{value:"Convolver"},defaults:{writable:!0,value:{highCut:{value:22050,min:20,max:22050,automatable:!0,type:n},lowCut:{value:20,min:20,max:22050,automatable:!0,type:n},dryLevel:{value:1,min:0,max:1,automatable:!0,type:n},wetLevel:{value:0,min:0,max:1,automatable:!0,type:n},level:{value:1,min:0,max:1,automatable:!0,type:n}}},lowCut:{get:function(){return this.filterLow.frequency.value},set:function(t){this.filterLow.frequency.value=t}},highCut:{get:function(){return this.filterHigh.frequency.value},set:function(t){this.filterHigh.frequency.value=t}},level:{get:function(){return this.output.gain.value},set:function(e){this.output.gain.setValueAtTime(e,t.currentTime)}},dryLevel:{get:function(){return this.dry.gain.value},set:function(e){this.dry.gain.setValueAtTime(e,t.currentTime)}},wetLevel:{get:function(){return this.wet.gain.value},set:function(t){this.wet.gain.value=t}},buffer:{enumerable:!1,get:function(){return this.convolver.buffer},set:function(e){var i=this.convolver,a=new XMLHttpRequest;e&&(a.open("GET",e,!0),a.responseType="arraybuffer",a.onreadystatechange=function(){4===a.readyState&&(a.status<300&&a.status>199||302===a.status)&&t.decodeAudioData(a.response,(function(t){i.buffer=t}),(function(t){}))},a.send(null))}}}),s.prototype.LFO=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.output=t.createScriptProcessor(256,1,1),this.activateNode=t.destination,this.frequency=u(e.frequency,this.defaults.frequency.value),this.offset=u(e.offset,this.defaults.offset.value),this.oscillation=u(e.oscillation,this.defaults.oscillation.value),this.phase=u(e.phase,this.defaults.phase.value),this.target=e.target||{},this.output.onaudioprocess=this.callback(e.callback||function(){}),this.bypass=e.bypass||!1},s.prototype.LFO.prototype=Object.create(a,{name:{value:"LFO"},bufferSize:{value:256},sampleRate:{value:44100},defaults:{value:{frequency:{value:1,min:0,max:20,automatable:!1,type:n},offset:{value:.85,min:0,max:22049,automatable:!1,type:n},oscillation:{value:.3,min:-22050,max:22050,automatable:!1,type:n},phase:{value:0,min:0,max:2*Math.PI,automatable:!1,type:n}}},frequency:{get:function(){return this._frequency},set:function(t){this._frequency=t,this._phaseInc=2*Math.PI*this._frequency*this.bufferSize/this.sampleRate}},offset:{get:function(){return this._offset},set:function(t){this._offset=t}},oscillation:{get:function(){return this._oscillation},set:function(t){this._oscillation=t}},phase:{get:function(){return this._phase},set:function(t){this._phase=t}},target:{get:function(){return this._target},set:function(t){this._target=t}},activate:{value:function(e){e?(this.output.connect(t.destination),this.activateCallback&&this.activateCallback(e)):this.output.disconnect()}},callback:{value:function(t){var e=this;return function(){e._phase+=e._phaseInc,e._phase>2*Math.PI&&(e._phase=0),t(e._target,e._offset+e._oscillation*Math.sin(e._phase))}}}}),s.toString=s.prototype.toString=function(){return"Please visit https://github.com/Theodeus/tuna/wiki for instructions on how to use Tuna.js"}}();